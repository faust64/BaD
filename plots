#/bin/sh

SETUP=false
LOG_PATH=/var/tmp/BaD
TMPFILE=/var/tmp/gnuplot.input.$$
GNUPLOT_COLORS="red blue orange violet yellow black pink cyan"
GNUPLOT_COLORS_HEX="e6194b 3cb44b ffe119 0082c8 f58231 911eb4 46f0f0 f032e6 d2f53c fabebe 008080 e6beff aa6e28 fffac8 800000 aaffc3 808000 ffd8b1 000080 808080 000000"

test -z "$LOG_PATH" && LOG_PATH=/var/tmp/BaD
while test "$1"
do
    case "$1" in
	-s|--setup) SETUP=true ;;
	-l|--logpath) LOG_PATH="$2"; shift ;;
	-h|--help) cat <<EOF
$0 usage:
  $0 [-l /logs]
EOF
	    exit 0
	    ;;
	*) echo discarding unrecognized option "$1" ;;
    esac
    shift
done

if $SETUP; then
    if test -x /bin/yum -o -x /usr/bin/yum; then
	if ! yum -y install gnuplot; then
	    echo failed installing gnuplot >&2
	    exit 1
	fi
    elif test -x /usr/bin/apt-get -o -x /bin/apt-get; then
	if ! DEBIAN_FRONTEND=noninteractive apt-get install -y gnuplot; then
	    echo failed installing gnuplot >&2
	    exit 1
	fi
    else
	echo unsupported platform
	exit 1
    fi
    exit 0
fi

devname=`awk '/ ioping statistics/{print $2" ("$4}' "$LOG_PATH"/ioping`
gnuplot <<EOF
set title "$devname IO ping"
set term "png"
set output "$LOG_PATH/ioping.png"
plot "$LOG_PATH/ioping.dat" using 1:2 title "response time in Âµs" with lines lt 1
EOF
gnuplot <<EOF
set title "$devname CPU usage"
set term "png"
set output "$LOG_PATH/cpu.png"
plot "$LOG_PATH/cpu-usage.dat" using 1:2 title "user %" with lines lt rgb "blue", \
    "$LOG_PATH/cpu-usage.dat" using 1:3 title "nice %" with lines lt rgb "yellow", \
    "$LOG_PATH/cpu-usage.dat" using 1:4 title "system %" with lines lt rgb "black", \
    "$LOG_PATH/cpu-usage.dat" using 1:5 title "iowait %" with lines lt rgb "red", \
    "$LOG_PATH/cpu-usage.dat" using 1:6 title "steal %" with lines lt rgb "violet", \
    "$LOG_PATH/cpu-usage.dat" using 1:7 title "idle %" with lines lt rgb "gray"
EOF
echo -n "plot " >$TMPFILE
lastbsize=`ls "$LOG_PATH"/dd-read-block-bs*-* | sed 's|.*read-block-bs\([^-]*\)-.*|\1|' | sort -u | tail -1`
ls "$LOG_PATH"/dd-read-block-bs*-* | sed 's|.*read-block-bs\([^-]*\)-.*|\1|' | sort -u | while read blocksize
    do
	test -z "$idx" && idx=1 || idx=`expr $idx + 1`
	test $idx -ge `echo $GNUPLOT_COLORS | awk -F' ' '{print NF}'` && idx=1
	color=`echo $GNUPLOT_COLORS | cut -d' ' -f$idx`
        if test "$blocksize" = "$lastbsize"; then
	    echo "\"$LOG_PATH/dd-read-block-bs$blocksize.dat\" using 1:2 title \"read blocksize $blocksize\" with lines lt rgb \"$color\""
	else
            echo "\"$LOG_PATH/dd-read-block-bs$blocksize.dat\" using 1:2 title \"read blocksize $blocksize\" with lines lt rgb \"$color\", \\"
	fi
    done >>$TMPFILE
plotdata=`cat $TMPFILE`
gnuplot <<EOF
set title "$devname read throughputs"
set term "png"
set output "$LOG_PATH/dd-read-block.png"
$plotdata
EOF
echo -n "plot " >$TMPFILE
lastbsize=`ls "$LOG_PATH"/dd-write-bs*-*direct* | sed 's|.*write-bs\([^-]*\)-.*|\1|' | sort -u | tail -1`
ls "$LOG_PATH"/dd-write-bs*-*direct* | sed 's|.*write-bs\([^-]*\)-.*|\1|' | sort -u | while read blocksize
    do
	test -z "$idx" && idx=1 || idx=`expr $idx + 1`
	test $idx -ge `echo $GNUPLOT_COLORS | awk -F' ' '{print NF}'` && idx=1
	color=`echo $GNUPLOT_COLORS | cut -d' ' -f$idx`
        if test "$blocksize" = "$lastbsize"; then
	    echo "\"$LOG_PATH/dd-write-direct-bs$blocksize.dat\" using 1:2 title \"write blocksize $blocksize\" with lines lt rgb \"$color\""
	else
            echo "\"$LOG_PATH/dd-write-direct-bs$blocksize.dat\" using 1:2 title \"write blocksize $blocksize\" with lines lt rgb \"$color\", \\"
	fi
    done >>$TMPFILE
plotdata=`cat $TMPFILE`
gnuplot <<EOF
set title "$devname write throughputs (MB/s, direct)"
set term "png"
set output "$LOG_PATH/dd-write-direct.png"
$plotdata
EOF
echo -n "plot " >$TMPFILE
lastbsize=`ls "$LOG_PATH"/dd-write-bs*-*fdatasync* | sed 's|.*write-bs\([^-]*\)-.*|\1|' | sort -u | tail -1`
ls "$LOG_PATH"/dd-write-bs*-*fdatasync* | sed 's|.*write-bs\([^-]*\)-.*|\1|' | sort -u | while read blocksize
    do
	test -z "$idx" && idx=1 || idx=`expr $idx + 1`
	test $idx -ge `echo $GNUPLOT_COLORS | awk -F' ' '{print NF}'` && idx=1
	color=`echo $GNUPLOT_COLORS | cut -d' ' -f$idx`
        if test "$blocksize" = "$lastbsize"; then
	    echo "\"$LOG_PATH/dd-write-fdatasync-bs$blocksize.dat\" using 1:2 title \"write blocksize $blocksize\" with lines lt rgb \"$color\""
	else
            echo "\"$LOG_PATH/dd-write-fdatasync-bs$blocksize.dat\" using 1:2 title \"write blocksize $blocksize\" with lines lt rgb \"$color\", \\"
	fi
    done >>$TMPFILE
plotdata=`cat $TMPFILE`
gnuplot <<EOF
set title "$devname write throughputs (MB/s, fdatasync)"
set term "png"
set output "$LOG_PATH/dd-write-fdatasync.png"
$plotdata
EOF
echo -n "plot " >$TMPFILE
idx=
for metric in read write
do
    for bench in 4threads randrw randwrite
    do
	test "$metric" = read -a "$bench" = randwrite && continue
	test -z "$idx" && idx=1 || idx=`expr $idx + 1`
	test $idx -ge `echo $GNUPLOT_COLORS | awk -F' ' '{print NF}'` && idx=1
	color=`echo $GNUPLOT_COLORS | cut -d' ' -f$idx`
	if test "$metric" = write -a "$bench" = randwrite; then
	    echo "\"$LOG_PATH/fio-$metric-$bench-throughput.dat\" using 1:2 title \"$metric $bench\" with lines lt rgb \"$color\""
	else
	    echo "\"$LOG_PATH/fio-$metric-$bench-throughput.dat\" using 1:2 title \"$metric $bench\" with lines lt rgb \"$color\", \\"
	fi
    done
done >>$TMPFILE
plotdata=`cat $TMPFILE`
gnuplot <<EOF
set title "$devname fio throughputs (MB/s)"
set term "png"
set output "$LOG_PATH/fio-throughputs.png"
$plotdata
EOF
echo -n "plot " >$TMPFILE
idx=
for bench in read-randrw write-randrw write-randwrite
do
    test -z "$idx" && idx=1 || idx=`expr $idx + 3`
    test `expr $idx + 2` -ge `echo $GNUPLOT_COLORS_HEXSFX | awk -F' ' '{print NF}'` && idx=1
    color1=`echo $GNUPLOT_COLORS_HEX | cut -d' ' -f$idx`
    color2=`echo $GNUPLOT_COLORS_HEX | cut -d' ' -f$(expr $idx + 1)`
    color3=`echo $GNUPLOT_COLORS_HEX | cut -d' ' -f$(expr $idx + 2)`
    if test "$bench" = write-randwrite; then
	echo "\"$LOG_PATH/fio-$bench-iops.dat\" using 1:2 title \"$bench min\" with lines lt rgb \"#$color1\", \\"
	echo "\"$LOG_PATH/fio-$bench-iops.dat\" using 1:3 title \"$bench max\" with lines lt rgb \"#$color2\", \\"
	echo "\"$LOG_PATH/fio-$bench-iops.dat\" using 1:4 title \"$bench average\" with lines lt rgb \"#$color3\""
    else
	echo "\"$LOG_PATH/fio-$bench-iops.dat\" using 1:2 title \"$bench min\" with lines lt rgb \"#$color1\", \\"
	echo "\"$LOG_PATH/fio-$bench-iops.dat\" using 1:3 title \"$bench max\" with lines lt rgb \"#$color2\", \\"
	echo "\"$LOG_PATH/fio-$bench-iops.dat\" using 1:4 title \"$bench average\" with lines lt rgb \"#$color3\", \\"
    fi
done >>$TMPFILE
plotdata=`cat $TMPFILE`
gnuplot <<EOF
set title "$devname fio benchmark (iops)"
set term "png"
set output "$LOG_PATH/fio-main-iops.png"
$plotdata
EOF
echo -n "plot " >$TMPFILE
idx=
for worker in bgupdread bgupdwrite bgwriter queryA queryB
do
    test -z "$idx" && idx=1 || idx=`expr $idx + 3`
    test `expr $idx + 2` -ge `echo $GNUPLOT_COLORS_HEXSFX | awk -F' ' '{print NF}'` && idx=1
    color1=`echo $GNUPLOT_COLORS_HEX | cut -d' ' -f$idx`
    color2=`echo $GNUPLOT_COLORS_HEX | cut -d' ' -f$(expr $idx + 1)`
    color3=`echo $GNUPLOT_COLORS_HEX | cut -d' ' -f$(expr $idx + 2)`
    if test "$worker" = queryB; then
	echo "\"$LOG_PATH/fio-custom-iops-$worker.dat\" using 1:2 title \"$worker min\" with lines lt rgb \"#$color1\", \\"
	echo "\"$LOG_PATH/fio-custom-iops-$worker.dat\" using 1:3 title \"$worker max\" with lines lt rgb \"#$color2\", \\"
	echo "\"$LOG_PATH/fio-custom-iops-$worker.dat\" using 1:4 title \"$worker average\" with lines lt rgb \"#$color3\""
    else
	echo "\"$LOG_PATH/fio-custom-iops-$worker.dat\" using 1:2 title \"$worker min\" with lines lt rgb \"#$color1\", \\"
	echo "\"$LOG_PATH/fio-custom-iops-$worker.dat\" using 1:3 title \"$worker max\" with lines lt rgb \"#$color2\", \\"
	echo "\"$LOG_PATH/fio-custom-iops-$worker.dat\" using 1:4 title \"$worker average\" with lines lt rgb \"#$color3\", \\"
    fi
done >>$TMPFILE
plotdata=`cat $TMPFILE`
gnuplot <<EOF
set title "$devname fio custom workload (iops)"
set term "png"
set output "$LOG_PATH/fio-custom-iops.png"
$plotdata
EOF
rm -f $TMPFILE
awk '{print $1}' "$LOG_PATH"/blocks-usage.dat | sort -u | \
    while read devname
    do
	if ! test -s "$LOG_PATH/blocks-$devname-usage.dat"; then
	    echo skipping "$devname"
	    continue
	fi
	gnuplot <<EOF
set title "$devname overall usage"
set term "png"
set output "$LOG_PATH/blocks-$devname-usage.png"
plot "$LOG_PATH/blocks-$devname-usage.dat" using 1:14 title "util" with filledcurve
EOF
	gnuplot <<EOF
set title "$devname requests"
set term "png"
set output "$LOG_PATH/blocks-$devname-requests.png"
plot "$LOG_PATH/blocks-$devname-usage.dat" using 1:2 title "read request merge" with lines lt rgb "red", \
     "$LOG_PATH/blocks-$devname-usage.dat" using 1:3 title "write request merge" with lines lt rgb "blue", \
     "$LOG_PATH/blocks-$devname-usage.dat" using 1:4 title "read requests" with lines lt rgb "orange", \
     "$LOG_PATH/blocks-$devname-usage.dat" using 1:5 title "write requests" with lines lt rgb "violet"
EOF
	gnuplot <<EOF
set title "$devname response times"
set term "png"
set output "$LOG_PATH/blocks-$devname-times.png"
plot "$LOG_PATH/blocks-$devname-usage.dat" using 1:10 title "average request processing time" with lines lt rgb "red", \
     "$LOG_PATH/blocks-$devname-usage.dat" using 1:11 title "average read request processing time" with lines lt rgb "blue", \
     "$LOG_PATH/blocks-$devname-usage.dat" using 1:12 title "average write request processing time" with lines lt rgb "orange", \
     "$LOG_PATH/blocks-$devname-usage.dat" using 1:13 title "average service time" with lines lt rgb "violet"
EOF
	gnuplot <<EOF
set title "$devname throughputs"
set term "png"
set output "$LOG_PATH/blocks-$devname-speed.png"
plot "$LOG_PATH/blocks-$devname-usage.dat" using 1:6 title "read MB/s" with lines lt rgb "red", \
     "$LOG_PATH/blocks-$devname-usage.dat" using 1:7 title "written MB/s" with lines lt rgb "blue"
EOF
	gnuplot <<EOF
set title "$devname request sizes"
set term "png"
set output "$LOG_PATH/blocks-$devname-rqsizes.png"
plot "$LOG_PATH/blocks-$devname-usage.dat" using 1:8 title "average request size" with lines lt rgb "red", \
     "$LOG_PATH/blocks-$devname-usage.dat" using 1:9 title "average queue size" with lines lt rgb "blue"
EOF
    done

exit $?
